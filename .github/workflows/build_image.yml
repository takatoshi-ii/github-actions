name: BUILD

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**/*.ipynb'
      - 'data/**'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - name: Install jq and sponge
      run: |
        sudo apt-get install -y jq moreutils

    - name: Check out
      uses: actions/checkout@v1

    - name: Login into a registry
      uses: azure/docker-login@v1
      with:
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Build, tag and push the base image
      run: |
        docker build -t chanwit/titanic-mlops-base:${GITHUB_SHA::8} -f Dockerfile.pipeline .
        docker push chanwit/titanic-mlops-base:${GITHUB_SHA::8}
        docker tag  chanwit/titanic-mlops-base:${GITHUB_SHA::8} chanwit/titanic-mlops-base:latest
        docker push chanwit/titanic-mlops-base:latest

    - name: Create changes back to Jupyter Notebook
      run: |
        jq --arg IMAGE_NAME "chanwit/titanic-mlops-base:${GITHUB_SHA::8}" \
          '.metadata.kubeflow_noteobok.docker_image=$IMAGE_NAME' < titanic_ml_comparison.ipynb \
          | sponge titanic_ml_comparison.ipynb

    - name: Commit files
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git commit -am "Update image to chanwit/titanic-mlops-base:${GITHUB_SHA::8}"

    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Run pipeline
      uses: chanwit/action-eksctl-kale@v2
      with:
        region: ap-southeast-1
        cluster: eks-kubeflow
        awsAccessKeyId: ${{ secrets.AWS_ACCESS_KEY_ID }}
        awsSecretAccessKey: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        notebook: titanic_ml_comparison.ipynb

    - name: Download the new model from S3
      uses: chanwit/action-s3-downloader@master
      with:
        awsAccessKeyId: ${{ secrets.MINIO_ACCESS_KEY_ID }}
        awsSecretAccessKey: ${{ secrets.MINIO_SECRET_ACCESS_KEY }}
        s3Endpoint: ${{ secrets.MINIO_URL }}
        s3BucketAndFile: /mlops-profile-titanic/model.joblib

    - name: Build and push model container
      run: |
        #
        # setup variables
        #
        export MODEL_IMAGE_NAME="chanwit/titanic-model"
        export MODEL_IMAGE_TAG=v$(date "+%Y%m%d%H%M%S")
        # version from file
        export MODEL_IMAGE_VERSION=$(cat MODEL_IMAGE_VERSION)
        #
        # actions
        #
        docker build --build-arg model=model.joblib -f Dockerfile.model -t ${MODEL_IMAGE_NAME}:latest .
        docker tag      ${MODEL_IMAGE_NAME}:latest ${MODEL_IMAGE_NAME}:${MODEL_IMAGE_TAG}
        docker tag      ${MODEL_IMAGE_NAME}:latest ${MODEL_IMAGE_NAME}:${MODEL_IMAGE_VERSION}
        docker push     ${MODEL_IMAGE_NAME}:${MODEL_IMAGE_TAG}
        docker push     ${MODEL_IMAGE_NAME}:${MODEL_IMAGE_VERSION}
        docker push     ${MODEL_IMAGE_NAME}:latest
